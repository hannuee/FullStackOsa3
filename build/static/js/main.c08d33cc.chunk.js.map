{"version":3,"sources":["App.js","index.js"],"names":["FilterForm","search","handleSearchChange","value","onChange","NewPersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","PersonsList","personsToShow","deletePerson","map","person","name","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setSearch","useEffect","axios","get","then","response","data","filter","toLowerCase","event","target","preventDefault","personObject","some","window","alert","post","concat","personToDelete","url","id","confirm","delete","ReactDOM","render","document","getElementById"],"mappings":"oLAGMA,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,mBAAV,OACjB,uDAAyB,uBAAOC,MAAOF,EAAQG,SAAUF,QAGrDG,EAAgB,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,iBAAkBC,EAAxC,EAAwCA,UAAWC,EAAnD,EAAmDA,mBAAnD,OACpB,uBAAMC,SAAUL,EAAhB,UACE,0CAAY,uBAAOH,MAAOI,EAASH,SAAUI,OAC7C,4CAAc,uBAAOL,MAAOM,EAAWL,SAAUM,OACjD,8BACE,wBAAQE,KAAK,SAAb,uBAKAC,EAAc,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,aAAjB,OAClB,mCAAGD,EAAcE,KAAI,SAAAC,GAAM,OACzB,8BAAsBA,EAAOC,KAA7B,IAAoCD,EAAOE,OAA3C,IAAmD,wBAAQC,QAAS,kBAAML,EAAaE,IAApC,sBAA3CA,EAAOC,YAqEJG,EAjEH,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACRC,EADQ,KACCC,EADD,OAEgBF,mBAAS,IAFzB,mBAERf,EAFQ,KAECkB,EAFD,OAGoBH,mBAAS,IAH7B,mBAGRb,EAHQ,KAGGiB,EAHH,OAIcJ,mBAAS,IAJvB,mBAIRrB,EAJQ,KAIA0B,EAJA,KAMhBC,qBAAU,WACRC,IACGC,IAAI,gBACJC,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,WACrC,IAEL,IAsCMnB,EAA4B,KAAXb,EAAiBsB,EAAUA,EAAQW,QAAO,SAAAjB,GAAM,OAAgE,IAA5DA,EAAOC,KAAKiB,cAAclC,OAAOA,EAAOkC,kBAEnH,OACE,gCACE,2CACA,cAAC,EAAD,CAAYlC,OAAQA,EAAQC,mBAfL,SAACkC,GAC1BT,EAAUS,EAAMC,OAAOlC,UAerB,2CACA,cAAC,EAAD,CAAeG,UA7CD,SAAC8B,GACjBA,EAAME,iBACN,IAAMC,EAAe,CACnBrB,KAAMX,EACNY,OAAQV,GAGPc,EAAQiB,MAAK,SAAAvB,GAAM,OAAIA,EAAOC,OAASX,KACxCkC,OAAOC,MAAP,UAAgBnC,EAAhB,mCAEAsB,IACGc,KAAK,eAAgBJ,GACrBR,MAAK,SAAAC,GACJR,EAAWD,EAAQqB,OAAOZ,EAASC,OACnCR,EAAW,IACXC,EAAa,QA8BoBnB,QAASA,EAASC,iBAdlC,SAAC4B,GACxBX,EAAWW,EAAMC,OAAOlC,QAaqEM,UAAWA,EAAWC,mBAX1F,SAAC0B,GAC1BV,EAAaU,EAAMC,OAAOlC,UAWxB,yCACA,cAAC,EAAD,CAAaW,cAAeA,EAAeC,aA3B1B,SAAC8B,GACpB,IAAMC,EAAG,uBAAmBD,EAAeE,IACxCN,OAAOO,QAAP,iBAAyBH,EAAe3B,KAAxC,QACDW,IAAMoB,OAAOH,GAAKf,MAAK,SAAAC,GACrBR,EAAWD,EAAQW,QAAO,SAAAjB,GAAM,OAAIA,EAAO8B,KAAOF,EAAeE,iBCxDzEG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c08d33cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst FilterForm = ({search, handleSearchChange}) => (\n  <div> filter shown with: <input value={search} onChange={handleSearchChange} /></div>\n)\n\nconst NewPersonForm = ({addPerson, newName, handleNameChange, newNumber, handleNumberChange}) => (\n  <form onSubmit={addPerson}>\n    <div> name: <input value={newName} onChange={handleNameChange} /></div>\n    <div> number: <input value={newNumber} onChange={handleNumberChange} /></div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n)\n\nconst PersonsList = ({personsToShow, deletePerson}) => (\n  <>{personsToShow.map(person => \n    <p key={person.name}>{person.name} {person.number} <button onClick={() => deletePerson(person)}>delete</button></p>\n  )}</>\n)\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n\n  useEffect(() => { \n    axios\n      .get('/api/persons')\n      .then(response => setPersons(response.data))\n    }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    if(persons.some(person => person.name === newName)) {\n      window.alert(`${newName} is already added to phonebook`);\n    } else {\n      axios\n        .post('/api/persons', personObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n      })\n    }\n  }\n\n  const deletePerson = (personToDelete) => {\n    const url = `/api/persons/${personToDelete.id}`\n    if(window.confirm(`Delete ${personToDelete.name} ?`)) {\n      axios.delete(url).then(response => {\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n    })}\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const personsToShow = (search === '') ? persons : persons.filter(person => person.name.toLowerCase().search(search.toLowerCase()) !== -1)\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <FilterForm search={search} handleSearchChange={handleSearchChange} />\n      <h2>Add a new</h2>\n      <NewPersonForm addPerson={addPerson} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      <PersonsList personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)\n"],"sourceRoot":""}